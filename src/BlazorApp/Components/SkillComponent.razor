@inject BrowserResizeService BrowserResizeService
@implements IAsyncDisposable


<ul style="text-align: left; columns: @NumberOfColumns; font-size: 1.25rem; margin: 1em; gap: 3em;">
    @foreach (var skill in AboutMe.Skills)
    {
        <li key="@skill">@skill</li>
    }
</ul>

@code {
    [Parameter]
    public required AboutMe AboutMe { get; set; }

    private int NumberOfColumns = 1;

    protected override async Task OnInitializedAsync()
    {
        await CheckWindowSize();
        await this.BrowserResizeService.RegisterResizeCallback<SkillComponent>(DotNetObjectReference.Create(this));
    }

    private async Task CheckWindowSize()
    {
        this.SetNumberOfColumns(await this.BrowserResizeService.GetWindowWidthAsync());
        StateHasChanged();
    }

    [JSInvokable]
    public async Task OnResize(int width, int height)
    {
        this.SetNumberOfColumns(width);
        StateHasChanged();
    }

    private void SetNumberOfColumns(int width)
    {
        if (width < 768)
        {
            NumberOfColumns = 1;
        }
        else if (width < 1024)
        {
            NumberOfColumns = 2;
        }
        else
        {
            NumberOfColumns = 3;
        }
    }

    public async ValueTask DisposeAsync()
    {
        await this.BrowserResizeService.DisposeAsync();
    }
}
